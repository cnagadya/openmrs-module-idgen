/* * This Source Code Form is subject to the terms of the Mozilla Public License,
 * v. 2.0. If a copy of the MPL was not distributed with this file, You can
 * obtain one at http://mozilla.org/MPL/2.0/. OpenMRS is also distributed under
 * the terms of the Healthcare Disclaimer located at http://openmrs.org/license.
 *
 * Copyright (C) OpenMRS Inc. OpenMRS is a registered trademark and the OpenMRS
 * graphic logo is a trademark of OpenMRS Inc.
 */

import React from 'react';
import moment from 'moment';
import {FaSearch} from 'react-icons/lib/fa';
import {Input, Table} from 'reactstrap';
import apiCall from '../../utilities/apiHelper';

export default class LogEntries extends React.Component {
    constructor() {
        super();
        this.state = {
            logEntries: [],
            isHidden: true,
            formattedLogEntries: []
        }
        this.getLogEntries = this
            .getLogEntries
            .bind(this);
    }
    advancedSearchView() {
        this.setState({
            isHidden: !this.state.isHidden
        })
    }
    getLogEntries() {
        apiCall(null, 'get', '/idgen/logentry?v=full').then((response) => {
            this.setState({logEntries: response.results});
        });
    }
    componentWillMount() {
        this.getLogEntries();
    }

    render() {
        console.log('state', this.state)
        return (
            <div className="logwrapper">
                <div className="search_label">
                    <i className=""></i>
                    <span>Search Log Entries</span>
                </div>
                <div className="logSearch">
                    <div className="input-group">
                        <input type="text" placeholder="Search" className="log_searchbox"/>
                        <span className="input-group-btn">
                            <button className="btn btn-secondary" type="button">< FaSearch/></button>
                        </span>
                    </div>
                    <button
                        className="searchlink"
                        onClick={this.advancedSearchView.bind(this)}>More Search Options</button>
                </div>
                <div className="logs_table_area">
                    <div >{!this.state.isHidden && <AdvancedSearch/>}</div>
                    <div className="logs_table">
                        <Table responsive bordered striped>
                            <thead>
                                <tr>
                                    <th>Source Name</th>
                                    <th>Identifier</th>
                                    <th>Date Generated</th>
                                    <th>Generated By</th>
                                    <th>Comments</th>
                                </tr>
                            </thead>
                            <tbody>
                                {this.state.logEntries.map(logEntry => {
                                        const formattedDate = moment(logEntry.dateGenerated).format('MM/DD/YYYY')
                                        return (
                                            <tr className="logEntriesRow">
                                                <td>{logEntry.source}</td>
                                                <td>{logEntry.identifier}</td>
                                                <td>{formattedDate}</td>
                                                <td>{logEntry.generatedBy.username}</td>
                                                <td>{logEntry.comment}</td>
                                            </tr>
                                        );
                                    })
                                }
                            </tbody>
                        </Table>
                    </div>
                </div>
            </div>
        )
    }
}

const AdvancedSearch = () => (
    <div className="advanced_wrapper">
        <form>

            <br/>
            <fieldset>
                <div className="col-sm-6 col-md-4">
                    <label className="search_lbl" name="source">Source Name</label>

                    <Input type="select" id="source">
                        <option>1</option>
                    </Input>

                </div>
                <div className="col-sm-6 col-md-4">
                    <label className="search_lbl" name="identifier">Identifier Contains</label>
                    <Input id="identifier"/>
                </div>
                <div className="col-sm-6 col-md-4">
                    <label className="search_lbl" name="gen_range">Generate Between</label>
                    <Input id="date_lower"/>
                    <span>-</span>
                    <Input id="date_upper"/>
                </div>
                <div className="col-sm-6 col-md-4">
                    <label className="search_lbl" name="gen_by">Generated By</label>
                    <Input id="gen_by"/>
                </div>

                <div className="col-sm-6 col-md-4">
                    <label className="search_lbl" name="comment">Comment Contains</label>
                    <Input id="comment"/>
                </div>
                <div className="clear"></div>

            </fieldset>

            <div className="btn-group" role="group">
                <input type="submit" value="Search" className=" col-sm-6"/>
                <button className="col-sm-6 cancelbtn">Clear All
                </button>

            </div>
        </form>
    </div>
)